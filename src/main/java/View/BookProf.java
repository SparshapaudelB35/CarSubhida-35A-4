package View;


import Controller.BookController;
import DAO.BookDAO;
import Model.Database;
import View.Cars1;
import View.UserProf;
import View.Pay1;
import View.Signup;
import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLightLaf;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import java.text.ParseException;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Acer
 */
public class BookProf extends javax.swing.JFrame {
private DefaultTableModel tableModel;
    private BookDAO bookdao;
    /**
     * Creates new form BookProf
     */
    public BookProf() {
        try{
        initComponents();
        populateComboBoxes();
        } catch(SQLException ex){
            Logger.getLogger(BookProf.class.getName()).log(Level.SEVERE, null, ex);
        }
        tableModel = (DefaultTableModel) BookTable.getModel();
        loadTableData();
        new BookController(this);
        Connection conn = null;
        try {
            conn = Database.getConnection();
            this.bookdao= new BookDAO(conn);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error establishing database connection: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            throw new RuntimeException("Unable to establish database connection.", e);
        }
            BookTable.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent e) {
        if (e.getClickCount() == 1) {
            int row = BookTable.rowAtPoint(e.getPoint());
            if (row >= 0) {
                populateTextFields(row);
            }
        }
    }
            });
    }
    

public String getSelectedRowId() {
    int selectedRow = BookTable.getSelectedRow();
    if (selectedRow >= 0) {
        return BookTable.getValueAt(selectedRow, 0).toString();
    }
    return null;
}

    
  private void loadTableData() {


        try (Connection conn = Database.getConnection();
             PreparedStatement pstmt = conn.prepareStatement("SELECT * FROM bookprof")) {
                tableModel.setRowCount(0);
            try (ResultSet rs = pstmt.executeQuery()) {
                while (rs.next()) {
                    String id = rs.getString("bookid");
                    String reg= rs.getString("Registration");
                    String cid = rs.getString("Customerid");
                    String cname=rs.getString("Name");
                    String pdate= rs.getString("PickUp");
                    String ddate = rs.getString("DropOff");
                    String price = rs.getString("Price");

                    tableModel.addRow(new Object[]{id,reg,cid,cname,pdate,ddate,price});
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(UserProf.class.getName()).log(Level.SEVERE, null, ex);
        }
     
    }
  private void populateTextFields(int row) {
    DefaultTableModel model = (DefaultTableModel) BookTable.getModel();
    BookID.setText(model.getValueAt(row, 0).toString());
    RegBox.setSelectedItem(model.getValueAt(row, 1).toString());
    IDbox.setSelectedItem(model.getValueAt(row, 2).toString());
    PickDate.setText(model.getValueAt(row, 4).toString());
    DropDate.setText(model.getValueAt(row, 5).toString());
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Name1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        DropDate = createFormattedTextField("##/##/####");
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        IDbox = new javax.swing.JComboBox<>();
        RegBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        BookTable = new javax.swing.JTable();
        Addbtn = new javax.swing.JButton();
        Upbtn = new javax.swing.JButton();
        Dltbtn = new javax.swing.JButton();
        CPLabel = new javax.swing.JLabel();
        UPLabel = new javax.swing.JLabel();
        Exitbtn = new javax.swing.JButton();
        Pay = new javax.swing.JButton();
        PickDate = createFormattedTextField("##/##/####");
        jLabel11 = new javax.swing.JLabel();
        Refresh = new javax.swing.JButton();
        ID = new javax.swing.JTextField();
        BookID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        Name1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Name1ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        jLabel13.setText("License no.");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LOGO.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, -40, -1, -1));

        jLabel2.setFont(new java.awt.Font("Magneto", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("CAR SUBHIDA");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel5.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        jLabel5.setText("Registration No.");

        jLabel6.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        jLabel6.setText("Customer ID");

        DropDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropDateActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        jLabel15.setText("Pick Up Date");

        jLabel16.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        jLabel16.setText("Drop Off Date");

        IDbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

        RegBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{}));
        RegBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegBoxActionPerformed(evt);
            }
        });

        BookTable.setBackground(new java.awt.Color(204, 204, 204));
        BookTable.setFont(new java.awt.Font("Microsoft JhengHei", 0, 13)); // NOI18N
        BookTable.setForeground(new java.awt.Color(180, 81, 81));
        BookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "BookID", "Registration No", "CustomerID", "Name", "Pickup Date", "DropOff Date", "Price"
            }
        ));
        jScrollPane1.setViewportView(BookTable);

        Addbtn.setText("Add");
        Addbtn.setPreferredSize(new java.awt.Dimension(65, 22));
        Addbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddbtnMouseClicked(evt);
            }
        });
        Addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddbtnActionPerformed(evt);
            }
        });

        Upbtn.setText("Update");
        Upbtn.setPreferredSize(new java.awt.Dimension(65, 22));
        Upbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpbtnMouseClicked(evt);
            }
        });
        Upbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpbtnActionPerformed(evt);
            }
        });

        Dltbtn.setText("Delete");
        Dltbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DltbtnMouseClicked(evt);
            }
        });

        CPLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        CPLabel.setIcon(new FlatSVGIcon("car.svg"));
        CPLabel.setText("Car Profile");
        CPLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CPLabelMouseClicked(evt);
            }
        });

        UPLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        UPLabel.setIcon(new FlatSVGIcon("user.svg"));
        UPLabel.setText("User Profile");
        UPLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UPLabelMouseClicked(evt);
            }
        });

        Exitbtn.setForeground(new java.awt.Color(246, 0, 0));
        Exitbtn.setIcon(new FlatSVGIcon("logout.svg"));
        Exitbtn.setText("LOGOUT");
        Exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitbtnActionPerformed(evt);
            }
        });

        Pay.setForeground(new java.awt.Color(102, 255, 51));
        Pay.setIcon(new FlatSVGIcon("Pay.svg"));
        Pay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PayMouseClicked(evt);
            }
        });

        PickDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PickDateActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 153, 105));
        jLabel11.setText("Booking Profile");

        Refresh.setText("Refresh");
        Refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RefreshMouseClicked(evt);
            }
        });
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });

        ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDActionPerformed(evt);
            }
        });

        BookID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookIDActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        jLabel7.setText("BookID");

        jMenu2.setIcon(new FlatSVGIcon("theme.svg"));
        jMenu2.setText("Theme");

        jMenuItem1.setText("Dark");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("Light");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UPLabel)
                            .addComponent(CPLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Upbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Dltbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BookID, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RegBox, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IDbox, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PickDate, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DropDate, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(Exitbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addGap(343, 343, 343)
                        .addComponent(Pay, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(547, 547, 547)
                    .addComponent(ID)
                    .addGap(548, 548, 548)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Pay, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DropDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IDbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RegBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PickDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BookID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(Upbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(Dltbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(CPLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(UPLabel)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(Exitbtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11)))
                        .addGap(41, 41, 41))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(338, 338, 338)
                    .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(339, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        try {
            // TODO add your handling code here:
            Signup signupPage = new Signup();
            signupPage.setLocationRelativeTo(null);
            // Set the signup page to visible
            signupPage.setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(BookProf.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        SwingUtilities.invokeLater(()->{
            try {
                UIManager.setLookAndFeel(new FlatDarkLaf());
                SwingUtilities.updateComponentTreeUI(this);
            } catch (UnsupportedLookAndFeelException ex) {
                Logger.getLogger(Cars1.class.getName()).log(Level.SEVERE, null, ex);
            }

        });
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        SwingUtilities.invokeLater(()->{
            try {
                UIManager.setLookAndFeel(new FlatLightLaf());
                SwingUtilities.updateComponentTreeUI(this);
            } catch (UnsupportedLookAndFeelException ex) {
                Logger.getLogger(Cars1.class.getName()).log(Level.SEVERE, null, ex);
            }

        });
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    private void populateComboBoxes() throws SQLException{
        try(
            Connection conn = Database.getConnection()){
            String Id= "SELECT CustomerID from userprof";
            try (PreparedStatement pId= conn.prepareStatement(Id);
                    ResultSet rId= pId.executeQuery()){
                while (rId.next()){
                    IDbox.addItem(rId.getString("CustomerID"));
                }
            }catch (SQLException e) 
            {
            e.printStackTrace();
            throw new SQLException("Error executing CustomerID query", e);}
            
            String Register= "Select RegistrationNo FROM cardetials WHERE Status='Available'";
            try (PreparedStatement pRegister= conn.prepareStatement(Register);
                    ResultSet rRegister= pRegister.executeQuery()){
                while (rRegister.next()){
                    RegBox.addItem(rRegister.getString("RegistrationNo"));
                }
            }catch (SQLException e) {
        e.printStackTrace();
        throw new SQLException("Error executing RegistrationNo query", e);}
    } catch (SQLException e) {
        e.printStackTrace();
        throw new SQLException("Error establishing database connection", e);
    }
                    
        
    }
    private void Name1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Name1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Name1ActionPerformed

    private void DropDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DropDateActionPerformed

    private void AddbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddbtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_AddbtnMouseClicked

    private void AddbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddbtnActionPerformed

    private void UpbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpbtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_UpbtnMouseClicked

    private void UpbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UpbtnActionPerformed

    private void DltbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DltbtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DltbtnMouseClicked

    private void CPLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CPLabelMouseClicked
        // TODO add your handling code here:
        Cars1 cars= new Cars1();
        cars.setLocationRelativeTo(null);
        cars.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_CPLabelMouseClicked

    private void UPLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPLabelMouseClicked
        // TODO add your handling code here:
        UserProf up= new UserProf();
        up.setLocationRelativeTo(null);
        up.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_UPLabelMouseClicked

    private void ExitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitbtnActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        System.exit(0);
    }
    }//GEN-LAST:event_ExitbtnActionPerformed

    private void PayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PayMouseClicked
        Object[] options = {"Esewa", "Khalti"};
    int confirm = JOptionPane.showOptionDialog(this, "Want to use Esewa or Khalti for payment", "Confirm Payment Method", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

    if (confirm == 0) {
        Pay1 pay= new Pay1();
        pay.setLocationRelativeTo(null);
        pay.setVisible(true);
        
    }else{
        Pay2 pay2= new Pay2();
        pay2.setLocationRelativeTo(null);
        pay2.setVisible(true);
        
    }
        
    }//GEN-LAST:event_PayMouseClicked

    private void PickDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PickDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PickDateActionPerformed

    private void RefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RefreshMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_RefreshMouseClicked

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        // TODO add your handling code here:
        //loadTableData();
    }//GEN-LAST:event_RefreshActionPerformed

    private void RegBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RegBoxActionPerformed

    private void IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDActionPerformed

    private void BookIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BookIDActionPerformed
    private JFormattedTextField createFormattedTextField(String format) {
        JFormattedTextField formattedTextField = null;
        try {
            MaskFormatter maskFormatter = new MaskFormatter(format);
            maskFormatter.setPlaceholderCharacter('_');
            formattedTextField = new JFormattedTextField(maskFormatter);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        return formattedTextField;
    }
    public javax.swing.JButton getAddbtn(){
        return Addbtn;
    }
    public javax.swing.JButton getDltbtn(){
        return Dltbtn;
    }
    public javax.swing.JButton getUpbtn(){
        return Upbtn;
    }
    public javax.swing.JComboBox<String> getRegBox(){
        return RegBox;
    }
    public javax.swing.JComboBox<String> getIDbox(){
        return IDbox;
    }
    public javax.swing.JTextField getPickDate(){
        return PickDate;
    }
    public javax.swing.JTextField getDropDate(){
        return DropDate;
    }
    public javax.swing.JTable getBookTable(){
        return BookTable;
    }
    public javax.swing.JTextField getBookID(){
        return BookID;
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookProf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookProf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookProf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookProf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookProf().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Addbtn;
    private javax.swing.JTextField BookID;
    private javax.swing.JTable BookTable;
    private javax.swing.JLabel CPLabel;
    private javax.swing.JButton Dltbtn;
    private javax.swing.JTextField DropDate;
    private javax.swing.JButton Exitbtn;
    private javax.swing.JTextField ID;
    private javax.swing.JComboBox<String> IDbox;
    private javax.swing.JTextField Name1;
    private javax.swing.JButton Pay;
    private javax.swing.JTextField PickDate;
    private javax.swing.JButton Refresh;
    private javax.swing.JComboBox<String> RegBox;
    private javax.swing.JLabel UPLabel;
    private javax.swing.JButton Upbtn;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
